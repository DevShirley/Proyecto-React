{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\Trabajo-React (2)\\\\glamping-app\\\\src\\\\components\\\\pages\\\\ReservasPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReservasTemplate from '../templates/ReservasTemplate';\nimport reservasData from '../../data/reservas.json';\nimport { obtenerClientes, obtenerClientePorId } from '../../controllers/ClienteController';\nimport { obtenerGlampings, obtenerGlampingPorId } from '../../controllers/GlampingController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservasPage = () => {\n  _s();\n  const [reservaActual, setReservaActual] = useState({\n    id: null,\n    clienteId: '',\n    glampingId: '',\n    fechaInicio: '',\n    fechaFin: '',\n    totalPagado: 0,\n    estado: 'pendiente'\n  });\n  const [reservas, setReservas] = useState([]);\n  const [clientes, setClientes] = useState([]);\n  const [glampings, setGlampings] = useState([]);\n  const [reservaSeleccionada, setReservaSeleccionada] = useState(null);\n  const [modalDetallesAbierto, setModalDetallesAbierto] = useState(false);\n  const [modalConfirmarAbierto, setModalConfirmarAbierto] = useState(false);\n  const [modalEstadoAbierto, setModalEstadoAbierto] = useState(false);\n  const [estadoNuevo, setEstadoNuevo] = useState('pendiente');\n  const [idEliminar, setIdEliminar] = useState(null);\n  useEffect(() => {\n    const enriquecerReservas = async () => {\n      const reservasConDatos = await Promise.all(reservasData.map(async r => {\n        const cliente = await obtenerClientePorId(r.clienteId);\n        const glamping = await obtenerGlampingPorId(r.glampingId);\n        return {\n          ...r,\n          clienteNombre: (cliente === null || cliente === void 0 ? void 0 : cliente.nombre) || 'Desconocido',\n          glampingNombre: (glamping === null || glamping === void 0 ? void 0 : glamping.nombre) || 'Desconocido'\n        };\n      }));\n      setReservas(reservasConDatos);\n    };\n    enriquecerReservas();\n\n    // Cargar clientes y glampings\n    setClientes(obtenerClientes());\n    setGlampings(obtenerGlampings());\n  }, []);\n  const handleVerDetalles = reserva => {\n    setReservaSeleccionada(reserva);\n    setModalDetallesAbierto(true);\n  };\n  const handleEliminar = id => {\n    setIdEliminar(id);\n    setModalConfirmarAbierto(true);\n  };\n  const confirmarEliminar = () => {\n    setReservas(reservas.filter(r => r.id !== idEliminar));\n    setIdEliminar(null);\n    setModalConfirmarAbierto(false);\n  };\n  const handleAbrirEstado = reserva => {\n    setReservaSeleccionada(reserva);\n    setEstadoNuevo(reserva.estado);\n    setModalEstadoAbierto(true);\n  };\n  const handleGuardarEstado = () => {\n    setReservas(reservas.map(r => r.id === reservaSeleccionada.id ? {\n      ...r,\n      estado: estadoNuevo\n    } : r));\n    setModalEstadoAbierto(false);\n    setReservaSeleccionada(null);\n  };\n  const handleEstadoChange = e => {\n    setEstadoNuevo(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(ReservasTemplate, {\n    reservas: reservas,\n    clientes: clientes,\n    glampings: glampings,\n    reservaActual: reservaActual,\n    onGuardar: () => {},\n    onEditar: () => {},\n    onEliminar: handleEliminar,\n    onVerDetalle: handleVerDetalles,\n    onCambiarEstado: handleAbrirEstado,\n    onFiltrar: () => {},\n    onResetFiltro: () => {},\n    filtros: {\n      clienteId: '',\n      glampingId: '',\n      estado: ''\n    },\n    calendario: {},\n    setCalendario: () => {},\n    alerta: null,\n    setAlerta: () => {}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservasPage, \"+zKSZyJMmzuAl02ERbGXABXD8oM=\");\n_c = ReservasPage;\nexport default ReservasPage;\nvar _c;\n$RefreshReg$(_c, \"ReservasPage\");","map":{"version":3,"names":["React","useState","useEffect","ReservasTemplate","reservasData","obtenerClientes","obtenerClientePorId","obtenerGlampings","obtenerGlampingPorId","jsxDEV","_jsxDEV","ReservasPage","_s","reservaActual","setReservaActual","id","clienteId","glampingId","fechaInicio","fechaFin","totalPagado","estado","reservas","setReservas","clientes","setClientes","glampings","setGlampings","reservaSeleccionada","setReservaSeleccionada","modalDetallesAbierto","setModalDetallesAbierto","modalConfirmarAbierto","setModalConfirmarAbierto","modalEstadoAbierto","setModalEstadoAbierto","estadoNuevo","setEstadoNuevo","idEliminar","setIdEliminar","enriquecerReservas","reservasConDatos","Promise","all","map","r","cliente","glamping","clienteNombre","nombre","glampingNombre","handleVerDetalles","reserva","handleEliminar","confirmarEliminar","filter","handleAbrirEstado","handleGuardarEstado","handleEstadoChange","e","target","value","onGuardar","onEditar","onEliminar","onVerDetalle","onCambiarEstado","onFiltrar","onResetFiltro","filtros","calendario","setCalendario","alerta","setAlerta","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/Trabajo-React (2)/glamping-app/src/components/pages/ReservasPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReservasTemplate from '../templates/ReservasTemplate';\r\nimport reservasData from '../../data/reservas.json';\r\nimport { obtenerClientes, obtenerClientePorId } from '../../controllers/ClienteController';\r\nimport { obtenerGlampings, obtenerGlampingPorId } from '../../controllers/GlampingController';\r\n\r\nconst ReservasPage = () => {\r\n  const [reservaActual, setReservaActual] = useState({\r\n    id: null,\r\n    clienteId: '',\r\n    glampingId: '',\r\n    fechaInicio: '',\r\n    fechaFin: '',\r\n    totalPagado: 0,\r\n    estado: 'pendiente'\r\n  });\r\n\r\n  const [reservas, setReservas] = useState([]);\r\n  const [clientes, setClientes] = useState([]);\r\n  const [glampings, setGlampings] = useState([]);\r\n  const [reservaSeleccionada, setReservaSeleccionada] = useState(null);\r\n  const [modalDetallesAbierto, setModalDetallesAbierto] = useState(false);\r\n  const [modalConfirmarAbierto, setModalConfirmarAbierto] = useState(false);\r\n  const [modalEstadoAbierto, setModalEstadoAbierto] = useState(false);\r\n  const [estadoNuevo, setEstadoNuevo] = useState('pendiente');\r\n  const [idEliminar, setIdEliminar] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const enriquecerReservas = async () => {\r\n      const reservasConDatos = await Promise.all(reservasData.map(async (r) => {\r\n        const cliente = await obtenerClientePorId(r.clienteId);\r\n        const glamping = await obtenerGlampingPorId(r.glampingId);\r\n        return {\r\n          ...r,\r\n          clienteNombre: cliente?.nombre || 'Desconocido',\r\n          glampingNombre: glamping?.nombre || 'Desconocido',\r\n        };\r\n      }));\r\n      setReservas(reservasConDatos);\r\n    };\r\n\r\n    enriquecerReservas();\r\n\r\n    // Cargar clientes y glampings\r\n    setClientes(obtenerClientes());\r\n    setGlampings(obtenerGlampings());\r\n  }, []);\r\n\r\n  const handleVerDetalles = (reserva) => {\r\n    setReservaSeleccionada(reserva);\r\n    setModalDetallesAbierto(true);\r\n  };\r\n\r\n  const handleEliminar = (id) => {\r\n    setIdEliminar(id);\r\n    setModalConfirmarAbierto(true);\r\n  };\r\n\r\n  const confirmarEliminar = () => {\r\n    setReservas(reservas.filter((r) => r.id !== idEliminar));\r\n    setIdEliminar(null);\r\n    setModalConfirmarAbierto(false);\r\n  };\r\n\r\n  const handleAbrirEstado = (reserva) => {\r\n    setReservaSeleccionada(reserva);\r\n    setEstadoNuevo(reserva.estado);\r\n    setModalEstadoAbierto(true);\r\n  };\r\n\r\n  const handleGuardarEstado = () => {\r\n    setReservas(reservas.map((r) =>\r\n      r.id === reservaSeleccionada.id ? { ...r, estado: estadoNuevo } : r\r\n    ));\r\n    setModalEstadoAbierto(false);\r\n    setReservaSeleccionada(null);\r\n  };\r\n\r\n  const handleEstadoChange = (e) => {\r\n    setEstadoNuevo(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <ReservasTemplate\r\n      reservas={reservas}\r\n      clientes={clientes}\r\n      glampings={glampings}\r\n      reservaActual={reservaActual}\r\n      onGuardar={() => {}}\r\n      onEditar={() => {}}\r\n      onEliminar={handleEliminar}\r\n      onVerDetalle={handleVerDetalles}\r\n      onCambiarEstado={handleAbrirEstado}\r\n      onFiltrar={() => {}}\r\n      onResetFiltro={() => {}}\r\n      filtros={{ clienteId: '', glampingId: '', estado: '' }}\r\n      calendario={{}}\r\n      setCalendario={() => {}}\r\n      alerta={null}\r\n      setAlerta={() => {}}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ReservasPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}